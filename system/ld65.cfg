MEMORY {
	ZP:     start = $00,    size = $0100, type = rw, file = "";
	RAM:    start = $0300,  size = $0500, type = rw, file = "";
	HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
	ROM0:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM1:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM2:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM3:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM4:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM5:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM6:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM7:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM8:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM9:   start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM10:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM11:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM12:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM13:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM14:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM15:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM16:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM17:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM18:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM19:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM20:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM21:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM22:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM23:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM24:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM25:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM26:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM27:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM28:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM29:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM30:  start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	ROM31:  start = $c000, size = $4000, type = ro, file = %O, fill=yes, fillval=$00;
	CHR:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
	ZEROPAGE:   load = ZP,  type = zp;
	BSS:        load = RAM, type = bss;
	DATA:       load = RAM, type = rw, define = yes;
	HEADER:     load = HDR, type = ro;
	PRG0:       load = ROM0, type = ro;
	PRG1:       load = ROM1, type = ro;
	PRG2:       load = ROM2, type = ro;
	PRG3:       load = ROM3, type = ro;
	PRG4:       load = ROM4, type = ro;
	PRG5:       load = ROM5, type = ro;
	PRG6:       load = ROM6, type = ro;
	PRG7:       load = ROM7, type = ro;
	PRG8:       load = ROM8, type = ro;
	PRG9:       load = ROM9, type = ro;
	PRG10:      load = ROM10, type = ro;
	PRG11:      load = ROM11, type = ro;
	PRG12:      load = ROM12, type = ro;
	PRG13:      load = ROM13, type = ro;
	PRG14:      load = ROM14, type = ro;
	PRG15:      load = ROM15, type = ro;
	PRG16:      load = ROM16, type = ro;
	PRG17:      load = ROM17, type = ro;
	PRG18:      load = ROM18, type = ro;
	PRG19:      load = ROM19, type = ro;
	PRG20:      load = ROM20, type = ro;
	PRG21:      load = ROM21, type = ro;
	PRG22:      load = ROM22, type = ro;
	PRG23:      load = ROM23, type = ro;
	PRG24:      load = ROM24, type = ro;
	PRG25:      load = ROM25, type = ro;
	PRG26:      load = ROM26, type = ro;
	PRG27:      load = ROM27, type = ro;
	PRG28:      load = ROM28, type = ro;
	PRG29:      load = ROM29, type = ro;
	PRG30:      load = ROM30, type = ro;
	PRG31:      load = ROM31, type = ro;
	FIXED_BANK: load = ROM31, type = ro;
	RODATA:     load = ROM31, type = ro;
	VECTORS:    load = ROM31, type = ro, start = $FFFA;
	TILES:      load = CHR, type = ro;
}
